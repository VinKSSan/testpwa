<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->

<svg
   fill="#000000"
   width="1140.0659"
   height="1140.8556"
   viewBox="0 0 45.602637 45.634224"
   version="1.1"
   id="svg1"
   sodipodi:docname="kritaLog.svg"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   inkscape:export-filename="../hd0/pastas_de_trabalho/desenvolvimento/devweb/verPersPage/vinsan_page/public/assets/UT/iconsTech/krita.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1">
    <linearGradient
       id="linearGradient626"
       inkscape:collect="always">
      <stop
         style="stop-color:#008080;stop-opacity:1;"
         offset="0"
         id="stop626" />
      <stop
         style="stop-color:#008080;stop-opacity:0;"
         offset="1"
         id="stop627" />
    </linearGradient>
    <linearGradient
       id="linearGradient584"
       inkscape:collect="always">
      <stop
         style="stop-color:#ffff00;stop-opacity:1;"
         offset="0"
         id="stop584" />
      <stop
         style="stop-color:#ffff00;stop-opacity:0;"
         offset="1"
         id="stop585" />
    </linearGradient>
    <linearGradient
       id="linearGradient582"
       inkscape:collect="always">
      <stop
         style="stop-color:#01ffff;stop-opacity:1;"
         offset="0"
         id="stop582" />
      <stop
         style="stop-color:#01ffff;stop-opacity:0;"
         offset="1"
         id="stop583" />
    </linearGradient>
    <linearGradient
       id="linearGradient580"
       inkscape:collect="always">
      <stop
         style="stop-color:#ff00ff;stop-opacity:1;"
         offset="0"
         id="stop580" />
      <stop
         style="stop-color:#ff00ff;stop-opacity:0;"
         offset="1"
         id="stop581" />
    </linearGradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient554"
       gradientUnits="userSpaceOnUse"
       x="47.34647"
       y="-7.5706925">
      <meshrow
         id="meshrow575">
        <meshpatch
           id="meshpatch575">
          <stop
             path="c 9.11592,10.5065  14.7378,9.72256  28.8523,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop575" />
          <stop
             path="c 0,9.61697  -14.4192,12.7753  0,28.8509"
             style="stop-color:#000000;stop-opacity:1"
             id="stop576" />
          <stop
             path="c -9.61745,0  -16.0373,-19.0791  -28.8523,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop577" />
          <stop
             path="c 8.45198,-12.9953  13.7629,-11.6621  0,-28.8509"
             style="stop-color:#000000;stop-opacity:1"
             id="stop578" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient580"
       id="linearGradient581"
       x1="61.226002"
       y1="-7.7937598"
       x2="61.534058"
       y2="16.872562"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient582"
       id="linearGradient583"
       x1="50.502586"
       y1="17.019142"
       x2="67.401611"
       y2="4.0065541"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient584"
       id="linearGradient585"
       x1="77.395996"
       y1="22.676321"
       x2="52.97216"
       y2="-4.3916855"
       gradientUnits="userSpaceOnUse" />
    <filter
       inkscape:label="Lightness-Contrast"
       inkscape:menu="Blurs"
       inkscape:menu-tooltip="Blur the contents of objects, preserving the outline and adding progressive transparency at edges"
       style="color-interpolation-filters:sRGB"
       id="filter626"
       x="-0.29027605"
       y="-0.29029035"
       width="1.5805521"
       height="1.5817249">
      <feGaussianBlur
         result="result6"
         stdDeviation="3"
         in="SourceGraphic"
         id="feGaussianBlur626" />
      <feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 "
         result="result7"
         in="SourceGraphic"
         id="feColorMatrix626" />
      <feComposite
         operator="in"
         in="result6"
         in2="result7"
         id="feComposite626"
         result="fbSourceGraphic" />
      <feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix816" />
      <feColorMatrix
         id="feColorMatrix817"
         values="1.443 0 0 0.292305 -0.2215 0 1.443 0 0.292305 -0.2215 0 0 1.443 0.292305 -0.2215 0 0 0 1 0"
         in="fbSourceGraphic" />
    </filter>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient626"
       id="linearGradient627"
       x1="17.2847"
       y1="-56.202461"
       x2="-9.0680046"
       y2="-53.58242"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.88980909,0,0,0.88980909,21.556068,79.158277)" />
  </defs>
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#111111"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#d1d1d1"
     showguides="false"
     inkscape:zoom="0.125"
     inkscape:cx="584"
     inkscape:cy="-104"
     inkscape:window-width="1300"
     inkscape:window-height="632"
     inkscape:window-x="30"
     inkscape:window-y="84"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg1">
    <sodipodi:guide
       position="119.9143,9.5590438"
       orientation="0,-1"
       id="guide541"
       inkscape:locked="false" />
  </sodipodi:namedview>
  <ellipse
     style="fill:#333333;fill-opacity:1;stroke:#ffffff;stroke-width:1.09978;stroke-opacity:0.00661633"
     id="path717"
     cx="22.784763"
     cy="23.166725"
     rx="14.512932"
     ry="14.793494" />
  <g
     id="g554"
     style="fill:url(#meshgradient554);fill-opacity:1;filter:url(#filter626)"
     transform="translate(-38.971325,15.945838)">
    <ellipse
       style="fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:2.35029;stroke-opacity:0.00661633"
       id="path36-67"
       cx="61.773964"
       cy="6.8541608"
       rx="14.424852"
       ry="14.424853" />
    <path
       id="path36-6-3"
       style="fill:url(#linearGradient581);fill-opacity:1;stroke:#ffffff;stroke-width:2.35029;stroke-opacity:0.00661633"
       d="M 61.771388,-7.5694458 A 14.424852,14.424853 0 0 0 47.362013,6.6400844 31.41226,14.412795 0 0 0 62.041857,8.3388344 31.41226,14.412795 0 0 0 76.189435,6.7605534 14.424852,14.424853 0 0 0 61.771388,-7.5694458 Z M 76.189435,6.7605534 a 14.424852,14.424853 0 0 1 0.0041,0.05734 14.424852,14.424853 0 0 0 -0.0013,-0.05789 31.41226,14.412795 0 0 1 -0.0027,5.47e-4 z m 0.0041,0.05734 a 14.424852,14.424853 0 0 1 8.6e-4,0.03719 14.424852,14.424853 0 0 1 -0.02008,0.305859 14.424852,14.424853 0 0 0 0.02195,-0.305546 14.424852,14.424853 0 0 0 -0.0027,-0.0375 z" />
    <path
       id="path36-8-1-6"
       style="fill:url(#linearGradient585);fill-opacity:1;stroke:#ffffff;stroke-width:2.35029;stroke-opacity:0.00661633"
       d="m 76.189728,6.7590074 a 31.41226,14.412795 0 0 1 -14.150235,1.578906 31.41226,14.412795 0 0 1 -1.420078,-0.02883 14.412795,31.41226 0.66435302 0 0 1.39,12.9524996 14.424852,14.424853 0 0 0 14.182344,-14.4074996 14.424852,14.424853 0 0 0 -0.002,-0.09508 z M 62.009415,21.261585 a 14.424852,14.424853 0 0 1 -0.01836,0.0013 c 1.49e-4,3.03e-4 2.42e-4,6.34e-4 3.9e-4,9.38e-4 a 14.424852,14.424853 0 0 0 0.0182,-0.0012 14.412795,31.41226 0.66435302 0 1 -2.35e-4,-0.0011 z" />
    <path
       id="path36-8-1-9-5-5"
       style="fill:url(#linearGradient583);fill-opacity:1;stroke:#ffffff;stroke-width:2.35029;stroke-opacity:0.00661633"
       d="m 47.36186,6.6400764 a 14.424852,14.424853 0 0 0 -0.01539,0.215312 14.424852,14.424853 0 0 0 14.424844,14.4248436 14.424852,14.424853 0 0 0 0.243437,-0.01594 14.412795,31.41226 0.66435302 0 1 -1.390234,-12.9539066 31.41226,14.412795 0 0 1 -12.949375,-1.600937 14.424853,14.424852 0.66435302 0 0 -0.0013,0.01891 14.424853,14.424852 0.66435302 0 0 0.004,0.07461 14.424853,14.424852 0.66435302 0 1 -0.0045,-0.07273 14.424853,14.424852 0.66435302 0 1 0.0017,-0.02078 31.41226,14.412795 0 0 1 -0.31289,-0.06938 z" />
    <path
       style="fill:#01ffff;fill-opacity:1;stroke:#ffffff;stroke-width:1.6;stroke-opacity:0.00661633"
       d="m 47.674085,6.7296414 c 4.47e-4,0.0024 3.12e-4,0.0048 3.12e-4,0.0072"
       id="path550-6" />
    <path
       style="fill:#01ffff;fill-opacity:1;stroke:#ffffff;stroke-width:1.6;stroke-opacity:0.00661633"
       d="m 47.686527,6.8054634 c -5.87e-4,-1.2e-4 -0.0012,-2e-4 -0.0018,-3.2e-4 -2.72e-4,-8e-5 -5.11e-4,-2.4e-4 -7.81e-4,-3.2e-4 -0.0011,-2.8e-4 -0.0023,-3.6e-4 -0.0033,-7.92e-4 -2.96e-4,-1.2e-4 -5.4e-4,-3.6e-4 -8.28e-4,-5e-4 -0.0021,-10e-4 -0.0029,-0.0016 -0.0049,-0.0031 -0.0014,-0.001 -0.0026,-0.0018 -0.0037,-0.0032 -2.24e-4,-2.8e-4 -2.96e-4,-6.48e-4 -4.76e-4,-9.56e-4 -6.09e-4,-10e-4 -0.0012,-0.0021 -0.0018,-0.0031 -7.14e-4,-0.0012 -0.0017,-0.0024 -0.0023,-0.0037 -2.24e-4,-4.96e-4 -3.12e-4,-10e-4 -4.69e-4,-0.0016 -8.43e-4,-0.0028 -1.68e-4,-0.0054 -4.87e-4,-0.0082 -6.8e-5,-5.96e-4 -2.92e-4,-0.0012 -3.6e-4,-0.0018 -8.8e-5,-7.56e-4 0,-0.0015 0,-0.0023 0,-0.0017 0,-0.0035 0,-0.0052"
       id="path551-3" />
    <path
       style="fill:#01ffff;fill-opacity:1;stroke:#ffffff;stroke-width:1.6;stroke-opacity:0.00661633"
       d="m 47.669336,6.7156954 c 9.02e-4,-4.6e-4 0.0018,-3.2e-4 0.0028,-3.2e-4 8.28e-4,0 0.0015,-5e-6 0.0023,1.6e-4 5.2e-5,10e-6 1.04e-4,0 1.56e-4,0 2.08e-4,0 4.19e-4,-4e-5 6.21e-4,0 9.02e-4,2e-4 0.0017,8.48e-4 0.0025,0.0012 0.0013,6.68e-4 0.0031,0.0022 0.0039,0.0034 3.48e-4,5.2e-4 6.25e-4,0.0011 9.61e-4,0.0016 6.33e-4,9.92e-4 0.0013,0.0019 0.0019,0.003 5.41e-4,10e-4 4.58e-4,0.0012 8.34e-4,0.0022 2.8e-4,7.32e-4 6.98e-4,0.0014 9.78e-4,0.0021 2.84e-4,7.48e-4 3.56e-4,0.0016 6.58e-4,0.0023 5.9e-4,0.0015 8.89e-4,0.0014 0.0013,0.0029 6.86e-4,0.0027 3.68e-4,0.0021 7.14e-4,0.004 9.07e-4,0.0051 -1.6e-4,-8.28e-4 6.54e-4,0.0026 1.44e-4,6.08e-4 1.76e-4,0.0012 3.44e-4,0.0018 1.92e-4,6.72e-4 5.94e-4,0.0013 8.14e-4,0.0019 4.46e-4,0.0013 6.49e-4,0.0027 9.92e-4,0.0041 1.2e-4,4.8e-4 3.6e-4,9.28e-4 4.72e-4,0.0014 1.2e-4,5.16e-4 1.76e-4,0.001 3.12e-4,0.0016 7.2e-5,2.8e-4 2.44e-4,5.08e-4 3.12e-4,7.8e-4 1.12e-4,4.56e-4 -8.4e-5,9.44e-4 0,0.0014 5.2e-5,2.8e-4 2.52e-4,5.08e-4 3.12e-4,7.8e-4 10e-5,4.56e-4 0,9.36e-4 0,0.0014 0,0.0024 6.8e-5,0.0048 -6.71e-4,0.0071 -2.52e-4,8e-4 -9.44e-4,0.0017 -0.0013,0.0025 -4.17e-4,0.0011 -1.24e-4,0.0011 -8.01e-4,0.0019 -0.0014,0.0017 -2.64e-4,3.9e-5 -0.002,0.0015 -3.52e-4,2.8e-4 -5.47e-4,7.48e-4 -8.87e-4,0.0011 -6.49e-4,5.96e-4 -0.0038,0.0021 -0.0044,0.0023 -3.84e-4,1.6e-4 -8.11e-4,1.2e-4 -0.0012,1.6e-4 -5.45e-4,1.2e-4 -0.0011,3.2e-4 -0.0016,3.6e-4 -6.3e-4,8e-5 -0.0013,0 -0.0019,0 -0.0035,0 -0.0055,-6.76e-4 -0.0083,-0.0031 -0.0032,-0.0028 -0.0055,-0.0063 -0.0074,-0.01009 -8.15e-4,-0.0016 -0.0016,-0.0031 -0.0019,-0.0049 -7.27e-4,-0.0039 -3.6e-4,-0.0079 -3.6e-4,-0.01181 0,-0.0021 -9.2e-5,-0.0042 10e-6,-0.0062 2.4e-5,-4.84e-4 1.44e-4,-9.6e-4 1.76e-4,-0.0014 2.6e-5,-4e-4 -5.6e-5,-7.68e-4 0,-0.0011 1.96e-4,-0.0013 7.67e-4,-0.0027 10e-4,-0.004 1.4e-4,-6.84e-4 1.88e-4,-0.0019 3.6e-4,-0.0026 7.59e-4,-0.0031 3.56e-4,-0.0011 0.0011,-0.0032 4.69e-4,-0.0013 -2.72e-4,1.2e-4 4.75e-4,-0.0016 5.12e-4,-0.0012 0.0013,-0.002 0.0022,-0.003 5.99e-4,-6.64e-4 3.36e-4,-6.6e-4 0.0011,-0.0012 2.4e-4,-2e-4 5.51e-4,-2.8e-4 7.81e-4,-4.68e-4 1.32e-4,-1.2e-4 5.52e-4,-7.24e-4 6.26e-4,-9.36e-4 4e-5,-1.2e-4 -5.6e-5,-3.2e-4 0,-4.32e-4 1.68e-4,-3.6e-4 7.87e-4,-0.0011 9.44e-4,-0.0012 z"
       id="path552-9" />
    <path
       style="fill:#01ffff;fill-opacity:1;stroke:#ffffff;stroke-width:1.6;stroke-opacity:0.00661633"
       d="m 47.679606,6.7166164 c -0.0015,4.84e-4 -0.0033,4.04e-4 -0.0048,-3.6e-5 -5.94e-4,-1.6e-4 -10e-4,-5.2e-4 -0.0016,-7.8e-4 -7.8e-4,-4e-4 -0.0017,-4e-4 -0.0025,-7.76e-4 -2.32e-4,-1.2e-4 -3.92e-4,-3.6e-4 -6.25e-4,-4.68e-4 -9.2e-5,-4e-5 -2.12e-4,2.9e-5 -3.12e-4,0 -4.56e-4,-1.2e-4 -0.0014,-5.08e-4 -0.0017,-9.36e-4 -1.08e-4,-1.6e-4 -8e-5,-4e-4 -1.56e-4,-5.64e-4 -4.4e-5,-1.2e-4 -1.56e-4,-2e-4 -1.56e-4,-3.2e-4 0,-8e-5 1.2e-4,-8e-5 1.52e-4,-1.6e-4 2.72e-4,-5.12e-4 2.76e-4,-5.48e-4 7.51e-4,-8.68e-4 1.84e-4,-1.2e-4 4.22e-4,-4e-4 6.24e-4,-4.68e-4 5.22e-4,-1.6e-4 2.52e-4,8e-5 9.25e-4,-3.2e-4 1.2e-4,-8e-5 4.62e-4,3.7e-5 5.72e-4,0 1.2e-5,-4e-6 2.84e-4,-2.8e-4 3e-4,-3.2e-4 4.42e-4,-2.8e-4 0.0026,2e-4 0.0032,0 1.4e-4,-4e-5 1.8e-4,-2.4e-4 3.12e-4,-3.2e-4 3.76e-4,-2e-4 0.0014,-8e-6 0.0018,1.6e-4 1.12e-4,4e-5 1.8e-4,4.08e-4 2.36e-4,4.8e-4 2.88e-4,4e-4 5.5e-4,4.8e-4 7.81e-4,9.36e-4 1.2e-4,2.4e-4 -4.8e-5,3.2e-4 1.56e-4,6.08e-4 3.96e-4,6e-4 0.0015,0.0017 0.0017,0.0023 9.2e-5,2.8e-4 -8.4e-5,6.12e-4 0,8.76e-4 1e-4,3.2e-4 2.28e-4,6.2e-4 3.4e-4,9.28e-4 z"
       id="path553-4" />
    <path
       style="fill:#01ffff;fill-opacity:1;stroke:#ffffff;stroke-width:1.6;stroke-opacity:0.00661633"
       d="m 47.678137,6.7689474 c -0.002,-2.9e-5 -0.004,-10e-6 -0.006,4.8e-4 -5.01e-4,1.2e-4 -9.62e-4,4.48e-4 -0.0014,6.24e-4 -7.71e-4,3.2e-4 -0.0014,4.64e-4 -0.002,0.0011 -5.8e-4,5.8e-4 -8.19e-4,0.0014 -0.0011,0.0022 -2.32e-4,6.32e-4 -6.43e-4,0.0015 -6.89e-4,0.0022 -1.52e-4,0.0025 4.3e-4,0.0047 0.001,0.0071 1.16e-4,4.68e-4 1.72e-4,9.6e-4 3.52e-4,0.0014 1.76e-4,4.44e-4 5.2e-4,8.04e-4 7.09e-4,0.0012 1.56e-4,3.6e-4 1.84e-4,7.72e-4 3.28e-4,0.0011 1.32e-4,3.6e-4 3.6e-4,6.52e-4 5.01e-4,9.92e-4 5.8e-4,0.0014 0.0011,0.0029 0.0017,0.0042 6.29e-4,0.0013 0.0018,0.0023 0.0028,0.0033 6.82e-4,6.8e-4 0.0015,0.0016 0.0023,0.002 0.0011,6.56e-4 0.0037,3.2e-4 0.0046,3.2e-4 8.88e-4,0 0.0018,1.2e-4 0.0027,0 0.0022,-3.2e-4 0.007,-0.0012 0.009,-0.0032 5.48e-4,-5.48e-4 0.001,-0.0014 0.0014,-0.002 0.0011,-0.002 2.4e-4,-0.0051 -3.32e-4,-0.0071 -1.64e-4,-5.84e-4 -3.2e-4,-0.0012 -4.8e-4,-0.0018 -1.04e-4,-3.6e-4 -1.36e-4,-7.88e-4 -3.24e-4,-0.0011 -2.12e-4,-4e-4 -6.24e-4,-6.48e-4 -8.57e-4,-0.001 -2.32e-4,-3.6e-4 -3.2e-4,-8.24e-4 -5.19e-4,-0.0012 -5.42e-4,-0.0011 -10e-4,-0.0016 -0.0016,-0.0027 -0.0014,-0.0024 -0.0028,-0.0052 -0.0053,-0.0066 -3.64e-4,-2e-4 -7.8e-4,-2.8e-4 -0.0011,-4.96e-4 -3.6e-4,-2e-4 -6.53e-4,-4.92e-4 -0.001,-6.76e-4 -5.48e-4,-2.8e-4 -0.0012,-3.6e-4 -0.0017,-6.28e-4 -6.5e-4,-2.8e-4 -10e-4,-6.72e-4 -0.0016,-2.8e-4 -6e-5,4e-5 -8.8e-5,1.2e-4 -1.56e-4,1.6e-4 -9.6e-5,3.3e-5 -2.04e-4,0 -3.08e-4,0 -2.76e-4,1.2e-4 -5.56e-4,2.4e-4 -8.34e-4,3.6e-4 z"
       id="path554-8" />
  </g>
  <path
     id="path46"
     style="fill:url(#linearGradient627);fill-opacity:1;stroke:#ffffff;stroke-width:1.63701;stroke-opacity:0.00661633"
     d="m 27.266321,8.1656228 c 0.167835,0.033689 0.335627,0.067518 0.501488,0.1087934 A 12.684952,14.396522 0 0 0 27.266321,8.1656228 Z m 0.697176,0.1571074 a 12.684952,14.396522 0 0 1 1.445462,0.4936349 C 28.93803,8.6198899 28.455525,8.4545857 27.963497,8.3227302 Z M 13.681992,16.190728 a 12.684952,14.396522 0 0 0 -0.166352,0.421755 c 0.05447,-0.141082 0.107941,-0.282614 0.166352,-0.421755 z m -0.695788,2.032866 a 12.684952,14.396522 0 0 0 -0.04818,0.198886 c 0.01682,-0.06605 0.03055,-0.13312 0.04818,-0.198886 z m 0.629678,5.332111 c 0.580843,4.599801 3.279765,8.717091 7.35601,10.300027 2.278723,0.884234 5.563754,1.099437 8.007447,-0.693705 1.28886,-1.927345 -0.891017,-3.253844 -1.419452,-5.120017 -0.08936,-0.301986 -0.134086,-0.621735 -0.129788,-0.940485 -7.173824,5.885684 -12.883656,-1.048056 -13.814217,-3.54582 z m 23.535525,3.291458 a 12.684952,14.396522 0 0 1 -0.02932,0.116441 c 0.01073,-0.03814 0.01962,-0.07689 0.03004,-0.115118 -2.45e-4,-4.04e-4 -5.31e-4,-7.31e-4 -7.66e-4,-0.0013 z" />
  <g
     id="g717"
     transform="matrix(0.88980905,0,0,0.88980905,-64.239376,15.907102)">
    <path
       id="path46-2-3"
       style="fill:#333333;fill-opacity:1;stroke:#ffffff;stroke-width:1.85085;stroke-opacity:0.00661633"
       d="m 83.571297,-8.9097168 c -0.264843,-0.020274 -0.526175,0.091909 -0.699531,0.2935938 -0.512133,0.5739394 -0.117968,1.2060289 0.395703,1.735 0.261727,0.2683328 2.265325,2.5605423 4.380937,5.0360156 4.22e-4,-5.211e-4 0.001,-0.00103 0.0013,-0.00156 0.12541,0.1530006 0.251462,0.3049039 0.379999,0.4567188 a 14.204001,16.435346 0 0 0 -0.0023,0.00375 c 1.969623,2.4054587 4.042855,4.9722888 4.937187,6.1723437 1.462415,1.965902 4.550073,4.8637778 6.859141,4.6238278 3.87e-4,3.4e-4 0.0012,0.0011 0.0016,0.0014 a 0.67108881,0.17085484 0 0 1 0.243437,-0.01172 0.67108881,0.17085484 0 0 1 0.0139,7.8e-5 4.8091521,7.2889318 0 0 1 0.0147,-0.03336 c -0.0631,-0.109025 -0.054,-0.31044 -0.0177,-0.444297 0.19529,-0.716483 0.77647,-1.777822 1.43836,-1.966016 l 0.001,0.0015 c 0.0137,-0.0055 0.0313,-0.0077 0.0529,-0.0048 1e-4,1.3e-5 2.1e-4,-1.4e-5 3.1e-4,0 1.4e-4,-7e-6 2.6e-4,-6.7e-5 3.9e-4,-7.8e-5 0.01,-0.0056 0.0196,-0.01075 0.0295,-0.01578 9.9e-4,-0.0023 0.002,-0.0046 0.003,-0.0067 0.004,-0.0096 0.009,-0.01917 0.0116,-0.02922 0.004,-0.0126 0.005,-0.02564 0.008,-0.03852 0.001,-0.00834 0.003,-0.016796 0.003,-0.025156 h -8e-5 c 1e-5,-9.136e-4 3.3e-4,-0.00145 4.7e-4,-0.00219 v -0.00234 -0.00281 -0.00281 -0.00281 -0.00281 -0.00297 -0.00281 c 0,-9.3e-4 0,-0.00188 0,-0.00281 1e-5,-9.9e-4 5e-5,-0.00197 8e-5,-0.00297 5e-5,-0.00145 1.2e-4,-0.00294 3.9e-4,-0.00437 1e-4,-4.828e-4 2.4e-4,-0.00103 3.9e-4,-0.00156 -1.3e-4,-6.39e-4 -4.4e-4,-0.00122 -5.4e-4,-0.00188 -3.6e-4,-0.00231 -5.3e-4,-0.00462 -6.3e-4,-0.00695 -6e-5,-0.0014 -7e-5,-0.00282 -8e-5,-0.00422 -1e-5,-0.00171 0,-0.00337 0,-0.00508 v -0.00633 -0.0068 -0.00695 -0.00797 -0.00742 -0.00781 -0.00727 -0.00773 -0.00172 c -0.001,-0.00276 -0.002,-0.00626 -0.002,-0.010547 1.1e-4,-0.00394 2.7e-4,-0.00787 5.5e-4,-0.011797 1.6e-4,-0.00203 3.5e-4,-0.00406 5.5e-4,-0.00609 -7.5e-4,-0.00557 -0.001,-0.011191 -0.001,-0.016797 -1.3e-4,-0.00422 -2.1e-4,-0.00844 -2.4e-4,-0.012656 -2e-5,-0.00374 0,-0.00751 0,-0.01125 0,-0.00364 0,-0.0073 0,-0.010937 v -9.375e-4 c -1.3e-4,-3.919e-4 -2.6e-4,-7.941e-4 -3.9e-4,-0.00117 -6.3e-4,-0.00172 -0.001,-0.00348 -0.002,-0.00523 -5.4e-4,-0.00211 -10e-4,-0.00413 -10e-4,-0.00633 -1e-4,-0.0019 -9e-5,-0.0038 -8e-5,-0.0057 v -0.00734 c 0,-0.00294 1e-5,-0.00589 0,-0.00883 -10e-6,-0.00235 -10e-5,-0.00468 -1.5e-4,-0.00703 -6e-5,-0.00229 -9e-5,-0.0046 -3.2e-4,-0.00688 -2.8e-4,-0.0029 -8.5e-4,-0.00576 -0.001,-0.00867 -1e-4,-0.00173 -2.4e-4,-0.00346 -6.2e-4,-0.00516 -3.9e-4,-0.00196 -7.2e-4,-0.00393 -0.001,-0.00586 -2.6e-4,-0.00142 -4.8e-4,-0.00285 -9.4e-4,-0.00422 -6e-4,-0.00186 -10e-4,-0.00372 -0.002,-0.00562 -3e-4,-0.00143 -8.2e-4,-0.0027 -0.001,-0.00414 -7.1e-4,-0.00246 -10e-4,-0.00498 -10e-4,-0.00758 0,-0.00128 2e-5,-0.00255 0,-0.00383 -2e-5,-9.6e-4 -7e-5,-0.00193 -1.5e-4,-0.00289 -4e-5,-3.149e-4 -1e-5,-6.33e-4 -8e-5,-9.375e-4 -8e-4,-0.00232 -0.003,-0.0043 -0.003,-0.0068 -7.2e-4,-0.00312 -0.001,-0.00633 -0.001,-0.00953 -8e-5,-0.00219 -9e-5,-0.00437 -8e-5,-0.00656 h -1.6e-4 c 0,-4.63e-4 6e-5,-8.776e-4 8e-5,-0.00133 -0.44127,-2.6233938 -3.368225,-5.4127322 -5.248914,-6.64368479 -0.950198,-0.6226389 -2.825453,-1.96097821 -4.760312,-3.36054691 -0.285506,-0.2154531 -0.588982,-0.4347885 -0.907109,-0.6530469 -0.01999,-0.014535 -0.03791,-0.027184 -0.05789,-0.041719 -2.31e-4,8.4e-4 -0.0012,0.00139 -0.0028,7.812e-4 -5.38e-4,-2.157e-4 -0.0011,-6.175e-4 -0.0016,-0.00102 -6.84e-4,-5.079e-4 -0.0014,-8.024e-4 -0.002,-0.00148 -5.99e-4,-4.94e-4 -0.0012,-0.00101 -0.0018,-0.00141 -7.99e-4,-7.11e-4 -0.0016,-0.00134 -0.0024,-0.00195 -0.0011,-8.126e-4 -0.0023,-0.00163 -0.0034,-0.00234 -0.0012,-8.106e-4 -0.0025,-0.00163 -0.0038,-0.00234 -0.0011,-7.11e-4 -0.0022,-0.0014 -0.0032,-0.00211 -9e-4,-7.11e-4 -0.0019,-0.00132 -0.0029,-0.00203 -9.99e-4,-6.077e-4 -0.0019,-0.00132 -0.003,-0.00203 -0.0011,-7.11e-4 -0.0023,-0.00132 -0.0034,-0.00203 -0.0012,-7.093e-4 -0.0025,-0.00156 -0.0037,-0.00227 -7.73e-4,-3.921e-4 -0.0016,-8.627e-4 -0.0023,-0.00141 -2.21e-4,-1.453e-4 -4.98e-4,-2.531e-4 -7.03e-4,-3.906e-4 l -0.0054,-0.00367 c -3.92e-4,-3.128e-4 -3.3e-4,-6.521e-4 -0.0012,-9.375e-4 -8e-4,-5.078e-4 -0.0016,-5.483e-4 -0.0023,-0.00164 -6.99e-4,-5.935e-4 -0.0013,-0.00113 -0.002,-0.00164 -4.51e-4,-4.378e-4 -5.57e-4,-4.833e-4 -0.0012,-0.00117 -5.99e-4,-4.438e-4 -0.0014,-5.293e-4 -0.002,-0.00125 -7.99e-4,-4.716e-4 -0.0015,-0.00101 -0.0023,-0.00141 -6.97e-4,-4.256e-4 -0.0013,-0.00103 -0.002,-0.00133 -2.97e-4,-2.214e-4 -0.001,-4.208e-4 -0.001,-6.25e-4 -6.99e-4,-3.819e-4 -2.13e-4,-7.194e-4 -7.8e-5,-0.00109 -2.94e-4,-2.478e-4 -5.7e-4,-5.456e-4 -8.6e-4,-7.812e-4 -4.69e-4,-2.905e-4 -0.001,-5.659e-4 -0.0014,-8.594e-4 -0.0013,-9.02e-4 -0.0027,-0.00182 -0.0041,-0.00273 -0.0016,-0.00102 -0.0033,-0.00203 -0.005,-0.00305 -0.0016,-0.00102 -0.0032,-0.00203 -0.0048,-0.00305 -0.0016,-0.00102 -0.0031,-0.0019 -0.0047,-0.00281 l -0.0045,-0.00273 c -0.0013,-8.125e-4 -0.0027,-0.00152 -0.004,-0.00234 -0.0012,-7.093e-4 -0.0023,-0.00142 -0.0034,-0.00234 -6.89e-4,-6.074e-4 -0.0015,-0.00111 -0.0022,-0.00172 -4.98e-4,-4.825e-4 -10e-4,-6.432e-4 -0.0016,-0.00125 -6e-4,-4.377e-4 -0.0012,-9.302e-4 -0.0017,-0.00141 -4.36e-4,-3.463e-4 -5.58e-4,-7.396e-4 -0.0012,-0.00117 -3.33e-4,-3.433e-4 -5.66e-4,-7.351e-4 -8.59e-4,-0.00109 -4.7e-5,-3.14e-5 -1.09e-4,-4.83e-5 -1.56e-4,-7.81e-5 -3.66e-4,-2.468e-4 -5.95e-4,-5.294e-4 -0.0011,-7.813e-4 -9.99e-4,-8.125e-4 -0.0019,-0.00156 -0.003,-0.00227 -0.0014,-9.142e-4 -0.0029,-0.00167 -0.0043,-0.00258 -0.0015,-9.142e-4 -0.003,-0.00188 -0.0045,-0.00289 l -0.0052,-0.00336 c -0.0016,-0.00112 -0.0032,-0.00208 -0.0048,-0.0032 -0.0014,-0.00102 -0.0027,-0.00216 -0.0041,-0.00328 -3e-5,-3.76e-5 -1.13e-4,-4.33e-5 -1.56e-4,-7.81e-5 -0.0011,-5.485e-4 -0.002,-0.00111 -0.003,-0.00172 -0.0013,-7.11e-4 -0.0026,-0.0014 -0.0037,-0.00211 -0.0012,-7.11e-4 -0.0022,-0.0014 -0.0034,-0.00211 -0.0012,-7.11e-4 -0.0023,-0.00132 -0.0035,-0.00203 -0.0013,-8.126e-4 -0.0025,-0.00163 -0.0037,-0.00234 -6.83e-4,-4.81e-4 -0.0015,-0.00107 -0.0022,-0.00148 -1.27e-4,-7.31e-5 3.2e-5,-1.572e-4 -7.8e-5,-2.344e-4 -6.34e-4,-1.98e-4 -0.0014,-3.579e-4 -0.002,-5.469e-4 -0.02762,-0.018567 -0.05505,-0.037197 -0.08281,-0.055703 -0.0016,-0.00142 -0.0032,-0.00293 -0.0048,-0.00445 l -3.91e-4,-3.907e-4 c -8.76e-4,-4.737e-4 -0.0018,-0.00113 -0.0027,-0.00164 -0.001,-5.535e-4 -0.0021,-10e-4 -0.0032,-0.00148 -9.43e-4,-4.114e-4 -0.0018,-8.578e-4 -0.0027,-0.00133 -0.0054,-0.00355 -0.01057,-0.0072 -0.01594,-0.010781 -1.28e-4,-8.53e-5 -2.63e-4,-1.491e-4 -3.91e-4,-2.344e-4 -7.8e-5,-4.98e-5 -1.56e-4,-1.065e-4 -2.34e-4,-1.563e-4 -0.0114,-0.00762 -0.02257,-0.015246 -0.03399,-0.022812 -2.28e-4,-4.032e-4 -5.37e-4,-0.00101 -3.9e-4,-0.00133 v -7.81e-5 h -7.8e-5 c -2.01e-4,-2.54e-5 -1.54e-4,2.263e-4 -3.91e-4,1.562e-4 -7.1e-5,-2.17e-5 -1.57e-4,-5.88e-5 -2.34e-4,-7.81e-5 -5.91e-4,-1.981e-4 -0.0014,-4.694e-4 -0.002,-7.812e-4 -6.99e-4,-3.921e-4 -0.0014,-6.689e-4 -0.002,-0.00133 -5.8e-5,-4.2e-5 -1e-4,-1.105e-4 -1.56e-4,-1.562e-4 -7.41e-4,-5.749e-4 -0.0014,-0.00124 -0.002,-0.00195 -3.71e-4,-3.301e-4 -0.0012,-7.225e-4 -0.0012,-0.00109 l -7.03e-4,-3.906e-4 -3.13e-4,2.344e-4 v 2.344e-4 C 90.17067,-4.4841864 90.007459,-4.5888999 89.842347,-4.6928866 87.2847,-6.4842359 84.932712,-8.1609221 84.645081,-8.3863241 84.303941,-8.6612307 83.933437,-8.8879938 83.571409,-8.908746 Z m 18.438823,0.76125 c 0.18794,0.038496 0.37584,0.077124 0.56157,0.1242188 a 14.204001,16.435346 0 0 0 -0.56157,-0.1242188 z m 0.78071,0.179375 a 14.204001,16.435346 0 0 1 1.61859,0.5635156 c -0.52728,-0.2243064 -1.06764,-0.4129816 -1.61859,-0.5635156 z m -3.139299,0.5053125 v 7.81e-5 c -0.102349,-0.00173 -0.204439,0.00151 -0.30664,0.00172 a 15.112732,15.027288 7.8494921e-5 0 1 0.767579,0.012656 c -0.153774,-0.00711 -0.307412,-0.011923 -0.460939,-0.014453 z m -0.546406,0.00328 c -0.277362,0.00528 -0.554301,0.015581 -0.829922,0.036484 a 15.112732,15.027288 7.8494921e-5 0 1 0.829922,-0.036484 z m -1.150469,0.067344 c -0.600666,0.058414 -1.196185,0.1509613 -1.783046,0.28 a 15.112732,15.027288 7.8494921e-5 0 1 1.783046,-0.28 z m -2.123125,0.3601563 c -0.569627,0.1391277 -1.130271,0.3112241 -1.679687,0.5154687 a 15.112732,15.027288 7.8494921e-5 0 1 1.679687,-0.5154687 z m -2.043828,0.6538281 c -0.528783,0.2122495 -1.044904,0.4569815 -1.547968,0.7286719 a 15.112732,15.027288 7.8494921e-5 0 1 1.547968,-0.7286719 z m -2.012031,0.9894531 c -0.445673,0.2614479 -0.87872,0.5467162 -1.297969,0.8548438 a 15.112732,15.027288 7.8494921e-5 0 1 1.297969,-0.8548438 z m -4.159297,3.59875 -2.34e-4,1.563e-4 c -5.1e-5,1.097e-4 -1.18e-4,2.038e-4 -1.56e-4,3.125e-4 1.3e-4,-1.452e-4 2.41e-4,-3.245e-4 3.9e-4,-4.688e-4 z m 0.223438,0.6947656 a 14.204001,16.435346 0 0 0 -0.290391,0.51921881 c 0.09355,-0.1751649 0.191065,-0.3478098 0.290391,-0.51921881 z m -0.8025,0.073359 c -0.283676,0.40558161 -0.544819,0.82407501 -0.785703,1.25343891 A 15.112732,15.027288 7.8494921e-5 0 1 87.037313,-1.0228418 Z M 85.906219,0.88575061 C 85.692416,1.3154941 85.495333,1.7527047 85.324188,2.2004381 A 15.112732,15.027288 7.8494921e-5 0 1 85.906219,0.88575061 Z M 86.79911,1.0132506 A 14.204001,16.435346 0 0 0 86.612781,1.4948145 C 86.673771,1.3337698 86.733704,1.1721051 86.79911,1.013252 Z m -1.734141,1.9424218 c -0.115057,0.3573539 -0.216122,0.7188848 -0.303985,1.0845313 a 15.112732,15.027288 7.8494921e-5 0 1 0.303985,-1.0845313 z m 0.954922,0.3783594 a 14.204001,16.435346 0 0 0 -0.05391,0.2270313 c 0.01883,-0.07541 0.03418,-0.151954 0.05391,-0.2270313 z m -1.483203,1.8301563 c -0.04174,0.2606639 -0.07484,0.5226317 -0.102735,0.7860156 A 15.112732,15.027288 7.8494921e-5 0 1 84.536688,5.1641881 Z M 84.349266,7.49036 c -1.58e-4,0.166407 0.0012,0.332314 0.0066,0.497891 a 15.112732,15.027288 7.8494921e-5 0 1 -0.0066,-0.497891 z m 0.196093,2.45711 c 0.0025,0.01516 0.0047,0.03054 0.0072,0.0457 a 15.112732,15.027288 7.8494921e-5 0 1 -0.0072,-0.0457 z m 28.533601,3.231484 a 14.204001,16.435346 0 0 1 -0.0329,0.132891 c 0.012,-0.04354 0.022,-0.08777 0.0337,-0.131407 -2.3e-4,-3.84e-4 -5.3e-4,-5.16e-4 -7.8e-4,-0.0015 z" />
    <path
       id="path46-2-3-9"
       style="fill:#808080;fill-opacity:1;stroke:#ffffff;stroke-width:2.01821;stroke-opacity:0.00661633"
       d="m 101.5124,6.7641137 c -0.72169,0.2053317 -1.35529,1.3625082 -1.568255,2.1436989 -0.0503,0.1854991 -0.0543,0.4927383 0.0926,0.5566261 0.035,0.030216 0.0688,0.059711 0.10381,0.089873 1.4e-4,1.243e-4 2.8e-4,2.159e-4 4.2e-4,3.402e-4 1e-4,7.96e-5 1.6e-4,1.766e-4 2.6e-4,2.562e-4 1.08198,0.9356449 2.10552,1.8423209 3.24237,2.6820099 l 0.13239,0.0938 c 0.009,0.0039 0.0178,0.0073 0.0267,0.01099 0.0231,0.01079 0.0462,0.02159 0.0692,0.03271 0.0236,0.01058 0.0465,0.02259 0.0695,0.03407 0.0245,0.0122 0.0492,0.02455 0.0731,0.03799 0.0228,0.01355 0.0455,0.02723 0.0678,0.0414 0.0181,0.0098 0.0364,0.01889 0.0555,0.02641 8.3e-4,3.27e-4 8.1e-4,6.92e-4 0.002,10e-4 l 1.44795,-1.747145 c -0.002,-0.004 -0.005,-0.0081 -0.008,-0.01209 -0.01,-0.01624 -0.0203,-0.03144 -0.0314,-0.04643 -0.0169,-0.02136 -0.0337,-0.04274 -0.0499,-0.06457 -0.0143,-0.0182 -0.0282,-0.03671 -0.0414,-0.05563 -0.0129,-0.01727 -0.0259,-0.03451 -0.0388,-0.0518 -0.014,-0.01798 -0.0278,-0.03602 -0.0423,-0.05358 -0.014,-0.01831 -0.0289,-0.03581 -0.0434,-0.05367 -0.016,-0.0199 -0.029,-0.04214 -0.0435,-0.06312 -0.0135,-0.01958 -0.0247,-0.04044 -0.0387,-0.05989 -0.004,-0.0045 -0.008,-0.0092 -0.0111,-0.0138 -7.6e-4,1.1e-4 -10e-4,3.3e-4 -0.002,4.25e-4 -0.005,6.93e-4 -0.01,8.31e-4 -0.0154,10e-4 -0.003,9.6e-5 -0.008,1.48e-4 -0.0116,1.71e-4 2.1e-4,6.2e-5 -6.1e-4,1.02e-4 -8.5e-4,1.7e-4 -0.002,3.93e-4 -0.002,5.41e-4 -0.004,9.37e-4 -0.004,7.63e-4 -0.008,0.0012 -0.0109,0.002 1.3e-4,0 5.4e-4,-1.9e-5 4.2e-4,0 -0.003,9.82e-4 -0.007,0.0016 -0.01,0.0025 0,2.11e-4 -9.8e-4,4.82e-4 -0.002,6.82e-4 -0.001,2.2e-4 -0.002,4.01e-4 -0.003,5.96e-4 -0.001,1.9e-4 -0.004,7.7e-4 -0.003,5.97e-4 -2.8e-4,1.01e-4 -8.3e-4,2.32e-4 -0.001,3.4e-4 -0.004,0.0013 -0.009,0.0024 -0.0127,0.0037 0,-5.3e-5 -8e-5,-1.15e-4 -8e-5,-1.7e-4 -2.8e-4,0.0011 -0.003,0.0014 -0.005,0.0022 2.2e-4,-3.17e-4 8.3e-4,-6.89e-4 0.001,-0.001 10e-4,-3.16e-4 0.002,-5.82e-4 0.003,-9.37e-4 2.7e-4,-8.6e-5 5.8e-4,-1.7e-4 8.5e-4,-2.55e-4 h 9e-5 1.7e-4 9e-5 c -3e-5,-6.17e-4 -2.7e-4,-0.0014 -5.1e-4,-0.0022 0.008,-0.0065 0.0175,-0.01566 0.0251,-0.02198 z m 0.36316,0.1735296 c 0.001,-6.14e-4 -0.002,6.945e-4 -0.003,0.00102 -3.7e-4,1.897e-4 -10e-4,5.713e-4 -10e-4,7.665e-4 10e-4,-8.2e-4 0.003,-1.723e-4 0.004,-0.00174 z" />
    <path
       id="path46-2-8-6"
       style="fill:#1a1a1a;fill-opacity:1;stroke:#ffffff;stroke-width:1.85085;stroke-opacity:0.00661633"
       d="m 101.47649,7.2352045 c 0.001,-5.526e-4 -0.002,6.363e-4 -0.003,9.375e-4 -3.5e-4,1.746e-4 -8.2e-4,5.24e-4 -0.001,7.032e-4 0.001,-7.145e-4 0.003,-8.994e-4 0.004,-0.00164 z m 3.51703,2.8474215 a 2.014626,2.3033066 0 0 0 -2.01469,2.303281 2.014626,2.3033066 0 0 0 0.0754,0.61586 c 0.0216,0.221711 0.0613,0.441372 0.12383,0.653281 0.59166,2.142744 2.97085,3.604246 1.5075,5.803281 2.81703,-1.859962 3.63305,-5.110592 2.5257,-7.493281 -0.18015,-0.382277 -0.38421,-0.699585 -0.60305,-0.955391 a 2.014626,2.3033066 0 0 0 -1.61468,-0.927031 z m 7.70711,3.216953 a 14.204001,16.435346 0 0 1 -0.0331,0.132656 c 0.012,-0.04354 0.0221,-0.08777 0.0337,-0.131406 -1.5e-4,-2.66e-4 -4.4e-4,-6.71e-4 -6.2e-4,-0.0013 z" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
